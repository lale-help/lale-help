- project = ProjectPresenter.new(current_project, self)

.collection-dashboard.project-dashboard
  .header

    .left class=project.css
      == cell(:calendar_leaf, project.calendar_leaf_title_date, with_icon: :project)
        
      .title 
        - if project.complete?
          span.done = t('.title_complete')
        = project.name
      .description
        = project.description
    .right
      - if can? :manage, current_project
        = render 'edit_actions', item: current_project, presenter: project

      .secondary-buttons
        - if can? :invite_to, current_project
          = form_tag circle_project_invite_path(current_circle, project, type: :working_group), method: :post do
            - label = t('helpers.invite_working_group')
            button.button.button-secondary data-disable-with=label
              = label

        - unless project.working_group.is_private?
          - if can? :manage, current_project.circle
            = form_tag circle_project_invite_path(current_circle, project, type: :circle), method: :post do
              - label = t('helpers.invite_circle')
              button.button.button-secondary data-disable-with=label
                = label

  .details
    main
      .item-details-table
        - if project.has_date_range?
          .row.date-range
            .icon
            .title= t('.date_range')
            .details= project.date_range_sentence
        .row.organizer
          .icon
          .title= t('.organized-by')
          .details
            == cell(:user_icon, project.admin, circle: project.circle, link: true)
            = link_to_user(project.admin)
            | &nbsp;
            span.nowrap
              = t('.in_working_group')
              = link_to_working_group(project.working_group)

      = render partial: 'nav', locals: { project: project }

      .tab.stats

        .item-details-table

          - if project.tasks.present?
            .row.task
              .icon
              .title= Task.model_name.human(count: 2)
              .details
                = render 'stats', stats: project.stats.tasks

          - if project.supplies.present?
            .row.supply
              .icon
              .title= Supply.model_name.human(count: 2)
              .details
                = render 'stats', stats: project.stats.supplies

          - if project.tasks.present?
            .row.user
              .icon
              .title= User.model_name.human(count: 2)
              .details
                = render 'stats', stats: project.stats.users

      .tab.tasks
        = form_tag new_circle_project_task_path(current_circle, project), method: :get do
         - label = t('helpers.add', model: Task.model_name.human)
         button.button.button-secondary-inverted
           = label

        .task_section.open_tasks data-tab='open_tasks'
          - if @completed_tasks.present?
            a.task_status data-tab='completed_tasks' == t("dashboards.resources.show_completed_tasks")
          = render 'circle/tasks/list', circle: project.circle, tasks: @open_tasks
        .task_section.completed_tasks data-tab='completed_tasks'
          a.task_status data-tab='open_tasks' == t("dashboards.resources.show_open_tasks")
          = render 'circle/tasks/list', circle: project.circle, tasks: @completed_tasks

      .tab.supplies
        = form_tag new_circle_project_supply_path(current_circle, project), method: :get do
         - label = t('helpers.add', model: Supply.model_name.human)
         button.button.button-secondary-inverted
           = label

        .task_section.open_supplies data-tab='open_supplies'
          - if @completed_supplies.present?
            a.task_status data-tab='completed_supplies' == t("dashboards.resources.show_completed_supplies")
          = render 'circle/supplies/list', circle: project.circle, supplies: @open_supplies
        .task_section.completed_supplies data-tab='completed_supplies'
          a.task_status data-tab='open_supplies' == t("dashboards.resources.show_open_supplies")
          = render 'circle/supplies/list', circle: project.circle, supplies: @completed_supplies

      .tab.comments
        .task-comments data-url="#{circle_project_comments_path(current_circle, current_project)}"
          = render partial: 'circle/comments/comments', locals: { item: current_project, circle: current_circle, max_display: 5 }

      .tab.documents
        = render 'circle/files/list', files: @files, show_actions: can?(:manage, current_project), show_uploadable: false, circle: current_circle, project: current_project
        - if can? :add_file?, current_project
          = link_to t('helpers.new', model: FileUpload.model_name.human), new_circle_project_file_path(current_circle, project, FileUpload.uploadable_gid(current_project)), class: 'button button-primary'

    aside
      / currently unused
