= form_for [current_circle, @form] do |f|
  - if errors.present?
    .form-introduction.error
      p= t('error_correction')


  .field-row.single
    .field.required class=errors.css(:name)
      = f.label :name
      = errors.formatted_message_for(:name)
      = f.text_field :name, placeholder: true

  .field-row.single
    .field.required class=errors.css(:description)
      = f.label :description
      = errors.formatted_message_for(:description)
      = f.text_area :description

  .field-row
    .field.required class=errors.css(:due_date)
      = f.label :due_date
      = errors.formatted_message_for(:due_date)
      = f.text_field :due_date, type: :date, min: Time.now.strftime("%Y-%m-%d")

    .field.required class=errors.css(:location)
      = f.label :location
      = errors.formatted_message_for(:location)
      = f.text_field :location

  .field-row
    .field.required class=errors.css(:working_group)
      = f.label :working_group_id
      - unless @form.working_group_disabled?
        = f.collection_select :working_group_id, @form.available_working_groups, :id, :name
        = errors.message_for(:working_group)
      - else
        = f.hidden_field :working_group_id
        = text_field_tag :disabled, @form.working_group.name, disabled: true


    .field.required class=errors.css(:organizer_id)
      = f.label :organizer_id
      = f.grouped_collection_select(:organizer_id, @form.available_working_groups, :users, :name, :id, :name)
      = errors.message_for(:organizer_id)

  - if feature_enabled?(:projects)
    .field-row
      .field
        = f.label :project_id
        - unless @form.project_disabled?
          = @form.project_select(f)
          = errors.message_for(:project_id)
        - else
          = f.hidden_field :project_id
          = text_field_tag :disabled, @form.project.name, disabled: true

  .submit-row
    = f.submit
    - cancel_path = @form.supply.persisted? ? circle_supply_path(current_circle, current_supply) : circle_path(current_circle)
    = link_to t('supply_edit.cancel'), cancel_path
    - if locals[:delete]
      = link_to t('delete'), circle_supply_path(current_circle, current_supply), class: 'button secondary-action', data: {:confirm => t('helpers.confirm.supply.delete')}, :method => :delete
